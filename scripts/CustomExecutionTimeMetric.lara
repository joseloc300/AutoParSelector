import lara.metrics.Metric;
import lara.metrics.MetricResult;
import lara.code.Timer;
import lara.util.TimeUnits;
import lara.Strings;

import lara.Io;

/**
 * Measures execution time of an application.
 */
function CustomExecutionTimeMetric(prefix) {
	// Parent constructor
	Metric.call(this, "Execution Time");
	
	this._prefix = prefix === undefined ? "time:" : prefix;
}
// Inheritance
CustomExecutionTimeMetric.prototype = Object.create(Metric.prototype);


// Override
CustomExecutionTimeMetric.prototype.instrument = function($start, $end, exitAfter) {

	if(exitAfter) {
		var exitCode = "exit(0);";
		if($end) {
			$end.insertAfter(exitCode);
		}
		else {
			$start.insertAfter(exitCode);
		}
	}

	var timer = new Timer("NANOSECONDS");
	timer.setPrintUnit(false);
	timer.time($start, this._prefix , $end);	
}

// Override
CustomExecutionTimeMetric.prototype.report = function(processExecutor) {
	var value = Strings.extractValue(this._prefix, processExecutor.getConsoleOutput());	

	return new MetricResult(parseFloat(value), this.getUnit());
}

CustomExecutionTimeMetric.prototype.getImport = function() {
	return "CustomExecutionTimeMetric";
}

CustomExecutionTimeMetric.prototype.getUnit = function() {
	return "ns";
}
