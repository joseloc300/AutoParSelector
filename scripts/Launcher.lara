import Polybench;

import clava.Clava;
import lara.Io;

import lara.cmake.CMaker;
import lara.util.ProcessExecutor;

import weaver.WeaverJps;



aspectdef Launcher

	setDebug();

	//call Polybench("./sources/polybench-c-3.2/", ["datamining", "linear-algebra", "medley", "stencils"]);
	call Polybench("./sources/polybench-c-3.2/", ["linear-algebra/kernels/2mm"]);
	
/*

	println("Sequential");
	Clava.pushAst();
	x = call Sequential("./seq_output");
	println("X.a: "  + x.a);
	Clava.popAst();

	println("AutoPar");
	Clava.pushAst();
	call AutoPar;
	Clava.popAst();	
	*/
end

aspectdef Launcher2

	var xpto = {};
	xpto["a"] = 10;
	xpto["b"] = "asdasd";
	xpto["c"] = {};
	xpto["c"]["d"] = 3;

	Io.writeJson("test.json", xpto);
end
